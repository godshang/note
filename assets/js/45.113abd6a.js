(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{422:function(a,t,s){a.exports=s.p+"assets/img/87d8b133afcc25c534a0cb499817d2f1.87d8b133.png"},423:function(a,t,s){a.exports=s.p+"assets/img/a6bc71b9466e1ad204e04654d70a7210.a6bc71b9.png"},560:function(a,t,s){"use strict";s.r(t);var n=s(27),e=Object(n.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"threadlocal原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal原理"}},[a._v("#")]),a._v(" ThreadLocal原理")]),a._v(" "),t("p",[a._v("ThreadLocal对象可以提供线程局部变量，每个线程Thread拥有一份自己的副本变量，多个线程互不干扰。")]),a._v(" "),t("h2",{attrs:{id:"threadlocal的数据结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#threadlocal的数据结构"}},[a._v("#")]),a._v(" ThreadLocal的数据结构")]),a._v(" "),t("p",[t("code",[a._v("Thread")]),a._v("类有一个类型为"),t("code",[a._v("ThreadLocal.ThreadLocalMap")]),a._v("的实例变量"),t("code",[a._v("threadLocals")]),a._v("，也就是说"),t("strong",[a._v("每个线程都有一个自己的"),t("code",[a._v("ThreadLocalMap")])]),a._v("。")]),a._v(" "),t("p",[t("code",[a._v("ThreadLocalMap")]),a._v("有自己的独立实现，可以简单地将它的"),t("code",[a._v("key")]),a._v("视作"),t("code",[a._v("ThreadLocal")]),a._v("，"),t("code",[a._v("value")]),a._v("为代码中放入的值。实际上，"),t("code",[a._v("key")]),a._v("并不是"),t("code",[a._v("ThreadLocal")]),a._v("本身，而是它的一个"),t("strong",[a._v("弱引用")]),a._v("。")]),a._v(" "),t("p",[a._v("每个线程在向"),t("code",[a._v("ThreadLocal")]),a._v("里放值的时候，都会在自己的"),t("code",[a._v("ThreadLocalMap")]),a._v("里存，读也是以"),t("code",[a._v("ThreadLocal")]),a._v("为引用，在自己的"),t("code",[a._v("map")]),a._v("里找对应的"),t("code",[a._v("key")]),a._v("，从而实现了线程隔离。")]),a._v(" "),t("p",[t("code",[a._v("ThreadLocalMap")]),a._v("有点类似"),t("code",[a._v("HashMap")]),a._v("的结构，只是"),t("code",[a._v("HashMap")]),a._v("是由"),t("strong",[a._v("数组+链表")]),a._v("实现的，而"),t("code",[a._v("ThreadLocalMap")]),a._v("中并没有链表结构。")]),a._v(" "),t("p",[t("code",[a._v("ThreadLocalMap")]),a._v("中的"),t("code",[a._v("Entry")]),a._v("，它的"),t("code",[a._v("key")]),a._v("是"),t("code",[a._v("ThreadLocal<?> k")]),a._v("，继承自"),t("code",[a._v("WeakReference")]),a._v("， 也就是我们常说的弱引用类型。")]),a._v(" "),t("img",{attrs:{src:s(422)}}),a._v(" "),t("h2",{attrs:{id:"内存泄露"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内存泄露"}},[a._v("#")]),a._v(" 内存泄露")]),a._v(" "),t("p",[t("code",[a._v("ThreadLocal")]),a._v("的"),t("code",[a._v("key")]),a._v("是弱引用，那么在"),t("code",[a._v("ThreadLocal.get()")]),a._v("的时候,发生GC之后，"),t("code",[a._v("key")]),a._v("是否是null？")]),a._v(" "),t("img",{attrs:{src:s(423)}}),a._v(" "),t("p",[a._v("如果"),t("strong",[a._v("强引用threadLocalRef")]),a._v("不存在，那么"),t("code",[a._v("key")]),a._v("就会被回收，就会出现"),t("code",[a._v("value")]),a._v("没被回收，出现内存泄露。如果存在强引用，那么是"),t("code",[a._v("key")]),a._v("是不会被回收的。")]),a._v(" "),t("h2",{attrs:{id:"inheritablethreadlocal"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#inheritablethreadlocal"}},[a._v("#")]),a._v(" InheritableThreadLocal")]),a._v(" "),t("p",[a._v("使用ThreadLocal的时候，在异步场景下是无法给子线程共享父线程中创建的线程副本数据的。")]),a._v(" "),t("p",[a._v("为了解决这个问题，JDK中还有一个InheritableThreadLocal类，我们来看一个例子：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("InheritableThreadLocalDemo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" inheritableThreadLocal "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("InheritableThreadLocal")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"父类数据:threadLocal"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        inheritableThreadLocal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("set")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"父类数据:inheritableThreadLocal"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Runnable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Override")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"子线程获取父类`ThreadLocal`数据："')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" `"),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),a._v("`"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"子线程获取父类inheritableThreadLocal数据："')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" inheritableThreadLocal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("打印结果：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("子线程获取父类`ThreadLocal`数据：null\n子线程获取父类inheritableThreadLocal数据：父类数据:inheritableThreadLocal\n")])])]),t("p",[a._v("实现原理是子线程是通过在父线程中通过调用new Thread()方法来创建子线程，Thread#init方法在Thread的构造方法中被调用。在init方法中拷贝父线程数据到子线程中：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("init")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadGroup")]),a._v(" g"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Runnable")]),a._v(" target"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n                      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("long")]),a._v(" stackSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("AccessControlContext")]),a._v(" acc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n                      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("boolean")]),a._v(" inheritThreadLocals"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throw")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("NullPointerException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"name cannot be null"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("inheritThreadLocals "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("inheritableThreadLocals "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("inheritableThreadLocals "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocal")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("createInheritedMap")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("inheritableThreadLocals"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("stackSize "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" stackSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    tid "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("nextThreadID")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("但"),t("code",[a._v("InheritableThreadLocal")]),a._v("仍然有缺陷，一般我们做异步化处理都是使用的线程池，而"),t("code",[a._v("InheritableThreadLocal")]),a._v("是在new Thread中的"),t("code",[a._v("init()")]),a._v("方法给赋值的，而线程池是线程复用的逻辑，所以这里会存在问题。")]),a._v(" "),t("p",[a._v("当然，有问题出现就会有解决问题的方案，阿里巴巴开源了一个"),t("code",[a._v("TransmittableThreadLocal")]),a._v("组件就可以解决这个问题。")])])}),[],!1,null,null,null);t.default=e.exports}}]);