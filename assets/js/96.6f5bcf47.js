(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{541:function(a,t,e){"use strict";e.r(t);var v=e(27),s=Object(v.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"hashtable-源码分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hashtable-源码分析"}},[a._v("#")]),a._v(" Hashtable 源码分析")]),a._v(" "),t("p",[t("code",[a._v("Hashtable")]),a._v("是JDK提供的另一个"),t("code",[a._v("Map")]),a._v("实现，更为古老，从JDK 1.0版本开始就已经存在了。"),t("code",[a._v("Hashtable")]),a._v("与"),t("code",[a._v("HashMap")]),a._v("极为类似，包括内部数据结构与实现逻辑。")]),a._v(" "),t("h2",{attrs:{id:"类继承结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类继承结构"}},[a._v("#")]),a._v(" 类继承结构")]),a._v(" "),t("p",[t("code",[a._v("Hashtable")]),a._v("继承自"),t("code",[a._v("Dictionary")]),a._v("抽象类，并且实现了"),t("code",[a._v("Map")]),a._v("接口；"),t("code",[a._v("HashMap")]),a._v("继承自"),t("code",[a._v("AbstractMap")]),a._v("抽象类，且实现了"),t("code",[a._v("Map")]),a._v("接口。")]),a._v(" "),t("h2",{attrs:{id:"线程安全"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#线程安全"}},[a._v("#")]),a._v(" 线程安全")]),a._v(" "),t("p",[t("code",[a._v("Hashtabl")]),a._v("中的各方法都使用"),t("code",[a._v("synchronized")]),a._v("关键字，实现了并发访问时的线程安全性。")]),a._v(" "),t("h2",{attrs:{id:"其他细节"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他细节"}},[a._v("#")]),a._v(" 其他细节")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("Hashtable")]),a._v("不允许key和value为null。")]),a._v(" "),t("li",[t("code",[a._v("Hashtable")]),a._v("处理哈希冲突时，同样是插入到链表头部。")])])])}),[],!1,null,null,null);t.default=s.exports}}]);