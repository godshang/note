(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{349:function(a,t,s){a.exports=s.p+"assets/img/3adf1ea89d96bc9761699bfe5e24f724.3adf1ea8.png"},515:function(a,t,s){"use strict";s.r(t);var n=s(27),e=Object(n.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"apollo源码分析-portal-创建灰度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#apollo源码分析-portal-创建灰度"}},[a._v("#")]),a._v(" Apollo源码分析——Portal 创建灰度")]),a._v(" "),t("h2",{attrs:{id:"概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[a._v("#")]),a._v(" 概述")]),a._v(" "),t("p",[a._v("创建灰度，调用的是创建 Namespace 分支 的 API 。通过创建的子 Namespace ，可以关联其自己定义的 Cluster、Item、Release 等等。关系如下所图所示：")]),a._v(" "),t("p",[t("img",{attrs:{src:s(349),alt:""}})]),a._v(" "),t("ul",[t("li",[a._v("创建 Namespace 分支时：\n"),t("ul",[t("li",[a._v("会创建子 Cluster ，指向父 Cluster 。")]),a._v(" "),t("li",[a._v("会创建子 Namespace ，关联子 Namespace 。实际上，子 Namespace 和 父 Namespace 无任何数据字段上的关联。")])])]),a._v(" "),t("li",[a._v("向子 Namespace 添加 Item 时，该 Item 指向子 Namespace 。虽然，代码实现和父 Namespace 是一模一样的。")]),a._v(" "),t("li",[a._v("子 Namespace 发布( 灰度发布 ) 和 父 Namespace 发布( 普通发布 ) 在代码实现，有一些差距，后续文章分享。")]),a._v(" "),t("li",[a._v("在目前 Apollo 的实现上，可以把分支和灰度等价。")])]),a._v(" "),t("h2",{attrs:{id:"portal"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#portal"}},[a._v("#")]),a._v(" Portal")]),a._v(" "),t("h3",{attrs:{id:"namespacebranchcontroller"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#namespacebranchcontroller"}},[a._v("#")]),a._v(" NamespaceBranchController")]),a._v(" "),t("p",[a._v("在 "),t("code",[a._v("apollo-portal")]),a._v(" 项目中，"),t("code",[a._v("com.ctrip.framework.apollo.portal.controller.NamespaceBranchController")]),a._v(" ，提供 Namespace 分支的 API")]),a._v(" "),t("p",[t("code",[a._v("#createBranch(...)")]),a._v(" 方法，创建 Namespace 分支。代码如下：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@PreAuthorize")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("value "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"@permissionValidator.hasModifyNamespacePermission(#appId, #namespaceName, #env)"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@PostMapping")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("value "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/apps/{appId}/envs/{env}/clusters/{clusterName}/namespaces/{namespaceName}/branches"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("NamespaceDTO")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("createBranch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@PathVariable")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" appId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n                                 "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@PathVariable")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" env"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n                                 "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@PathVariable")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" clusterName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n                                 "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@PathVariable")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" namespaceName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" namespaceBranchService"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("createBranch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("appId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Env")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("valueOf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("env"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" clusterName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" namespaceName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h3",{attrs:{id:"namespacebranchservice"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#namespacebranchservice"}},[a._v("#")]),a._v(" NamespaceBranchService")]),a._v(" "),t("p",[a._v("在 "),t("code",[a._v("apollo-portal")]),a._v(" 项目中，"),t("code",[a._v("com.ctrip.framework.apollo.portal.service.NamespaceBranchService")]),a._v(" ，提供 Namespace 分支的 Service 逻辑。")]),a._v(" "),t("p",[t("code",[a._v("#createBranch(appId, env, parentClusterName, namespaceName)")]),a._v(" 方法，创建并保存 Namespace 分支。代码如下：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Transactional")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("NamespaceDTO")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("createBranch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" appId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Env")]),a._v(" env"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" parentClusterName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" namespaceName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" operator "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" userInfoHolder"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getUser")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getUserId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("createBranch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("appId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" env"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" parentClusterName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" namespaceName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" operator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Transactional")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("NamespaceDTO")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("createBranch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" appId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Env")]),a._v(" env"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" parentClusterName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" namespaceName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" operator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("NamespaceDTO")]),a._v(" createdBranch "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" namespaceBranchAPI"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("createBranch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("appId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" env"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" parentClusterName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" namespaceName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n            operator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Tracer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("logEvent")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TracerEventType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("CREATE_GRAY_RELEASE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("format")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"%s+%s+%s+%s"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" appId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" env"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" parentClusterName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n            namespaceName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" createdBranch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h3",{attrs:{id:"namespacebranchapi"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#namespacebranchapi"}},[a._v("#")]),a._v(" NamespaceBranchAPI")]),a._v(" "),t("p",[t("code",[a._v("com.ctrip.framework.apollo.portal.api.NamespaceBranchAPI")]),a._v("，实现 API 抽象类，封装对 Admin Service 的 Namespace 分支模块的 API 调用。代码如下：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Service")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("NamespaceBranchAPI")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("API")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("NamespaceDTO")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("createBranch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" appId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Env")]),a._v(" env"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" clusterName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" namespaceName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" operator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" restTemplate\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("post")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("env"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/apps/{appId}/clusters/{clusterName}/namespaces/{namespaceName}/branches?operator={operator}"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n                  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("NamespaceDTO")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" appId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" clusterName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" namespaceName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" operator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h2",{attrs:{id:"admin-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#admin-service"}},[a._v("#")]),a._v(" Admin Service")]),a._v(" "),t("h3",{attrs:{id:"namespacebranchcontroller-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#namespacebranchcontroller-2"}},[a._v("#")]),a._v(" NamespaceBranchController")]),a._v(" "),t("p",[a._v("在 "),t("code",[a._v("apollo-adminservice")]),a._v(" 项目中， "),t("code",[a._v("com.ctrip.framework.apollo.adminservice.controller.NamespaceBranchController")]),a._v(" ，提供 Namespace 分支的 API 。")]),a._v(" "),t("p",[t("code",[a._v("#createBranch(...)")]),a._v(" 方法，创建 Namespace 分支。代码如下：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@PostMapping")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/apps/{appId}/clusters/{clusterName}/namespaces/{namespaceName}/branches"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("NamespaceDTO")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("createBranch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@PathVariable")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" appId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n                                 "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@PathVariable")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" clusterName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n                                 "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@PathVariable")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" namespaceName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n                                 "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@RequestParam")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"operator"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" operator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("checkNamespace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("appId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" clusterName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" namespaceName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Namespace")]),a._v(" createdBranch "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" namespaceBranchService"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("createBranch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("appId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" clusterName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" namespaceName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" operator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BeanUtils")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("transform")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("NamespaceDTO")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" createdBranch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("ul",[t("li",[a._v("调用 "),t("code",[a._v("#checkNamespace(appId, clusterName, namespaceName)")]),a._v(" ，校验父 Namespace 是否存在。代码如下："),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("checkNamespace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" appId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" clusterName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" namespaceName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Namespace")]),a._v(" parentNamespace "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" namespaceService"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("findOne")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("appId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" clusterName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" namespaceName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("parentNamespace "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throw")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BadRequestException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("namespaceNotExists")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("appId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" clusterName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" namespaceName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])]),a._v(" "),t("li",[a._v("调用 "),t("code",[a._v("NamespaceBranchService#createBranch(appId, clusterName, namespaceName, operator)")]),a._v(" 方法，创建 Namespace 分支。")]),a._v(" "),t("li",[a._v("调用 "),t("code",[a._v("BeanUtils#transfrom(Class<T> clazz, Object src)")]),a._v(" 方法，将 Namespace 转换成 NamespaceDTO 对象。")])]),a._v(" "),t("h3",{attrs:{id:"namespacebranchservice-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#namespacebranchservice-2"}},[a._v("#")]),a._v(" NamespaceBranchService")]),a._v(" "),t("p",[a._v("在 "),t("code",[a._v("apollo-biz")]),a._v(" 项目中，"),t("code",[a._v("com.ctrip.framework.apollo.biz.service.NamespaceBranchService")]),a._v(" ，提供 Namespace 分支的 Service 逻辑给 Admin Service 和 Config Service 。")]),a._v(" "),t("p",[t("code",[a._v("#createBranch(appId, clusterName, namespaceName, operator)")]),a._v(" 方法，创建 Namespace 分支。即，新增子 Cluster 和子 Namespace 。代码如下：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Transactional")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Namespace")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("createBranch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" appId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" parentClusterName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" namespaceName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" operator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Namespace")]),a._v(" childNamespace "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("findBranch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("appId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" parentClusterName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" namespaceName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("childNamespace "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throw")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BadRequestException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("namespaceNotExists")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("appId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" parentClusterName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" namespaceName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Cluster")]),a._v(" parentCluster "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" clusterService"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("findOne")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("appId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" parentClusterName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("parentCluster "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" parentCluster"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getParentClusterId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throw")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BadRequestException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("clusterNotExists")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("parentClusterName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//create child cluster")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Cluster")]),a._v(" childCluster "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("createChildCluster")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("appId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" parentCluster"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" namespaceName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" operator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Cluster")]),a._v(" createdChildCluster "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" clusterService"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("saveWithoutInstanceOfAppNamespaces")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("childCluster"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//create child namespace")]),a._v("\n    childNamespace "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("createNamespaceBranch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("appId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" createdChildCluster"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n                                                        namespaceName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" operator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" namespaceService"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("save")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("childNamespace"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("ul",[t("li",[a._v("调用 "),t("code",[a._v("#findBranch(appId, parentClusterName, namespaceName)")]),a._v(" 方法，获得子 Namespace 对象。")]),a._v(" "),t("li",[a._v("校验若存在子 Namespace 对象，则抛出 BadRequestException 异常。一个 Namespace 有且仅允许有一个子 Namespace 。")]),a._v(" "),t("li",[a._v("调用 "),t("code",[a._v("ClusterService#findOne(appId, parentClusterName)")]),a._v(" 方法，获得父 Cluster 对象。")]),a._v(" "),t("li",[a._v("校验若父 Cluster 对象不存在，则抛出 BadRequestException 异常。")]),a._v(" "),t("li",[a._v("调用 "),t("code",[a._v("#createChildCluster(appId, parentCluster, namespaceName, operator)")]),a._v(" 方法，创建子 Cluster 对象。")]),a._v(" "),t("li",[a._v("调用 "),t("code",[a._v("ClusterService#saveWithoutInstanceOfAppNamespaces(Cluster)")]),a._v(" 方法，保存子 Cluster 对象。")]),a._v(" "),t("li",[a._v("调用 "),t("code",[a._v("#createNamespaceBranch(appId, createdChildClusterName, namespaceName, operator)")]),a._v(" 方法，创建子 Namespace 对象。")]),a._v(" "),t("li",[a._v("调用 "),t("code",[a._v("NamespaceService#save(childNamespace)")]),a._v(" 方法，保存子 Namespace 对象。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);