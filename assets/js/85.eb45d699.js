(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{523:function(t,e,a){"use strict";a.r(e);var s=a(27),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"eventexecutorgroup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#eventexecutorgroup"}},[t._v("#")]),t._v(" EventExecutorGroup")]),t._v(" "),e("h2",{attrs:{id:"接口定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#接口定义"}},[t._v("#")]),t._v(" 接口定义")]),t._v(" "),e("p",[e("code",[t._v("EventExecutorGroup")]),t._v("定义在"),e("code",[t._v("io.netty.util.concurrent")]),t._v("包中，继承自JDK中的"),e("code",[t._v("ScheduledExecutorService")]),t._v("，因此可以提供异步任务、定时任务的支持。")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("io"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netty"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("concurrent")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventExecutorGroup")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ScheduledExecutorService")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Iterable")]),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventExecutor")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"优雅关闭"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优雅关闭"}},[t._v("#")]),t._v(" 优雅关闭")]),t._v(" "),e("p",[e("code",[t._v("EventExecutorGroup")]),t._v("相对于JDK中的"),e("code",[t._v("ExecutorService")]),t._v("而言，提供了优雅关闭的方式，同时将"),e("code",[t._v("shutdown")]),t._v("和"),e("code",[t._v("shutdownNow")]),t._v("方法标记为"),e("code",[t._v("Deprecated")]),t._v("。")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Signals this executor that the caller wants the executor to be shut down.  Once this method is called,\n * {@link #isShuttingDown()} starts to return {@code true}, and the executor prepares to shut itself down.\n * Unlike {@link #shutdown()}, graceful shutdown ensures that no tasks are submitted for <i>'the quiet period'</i>\n * (usually a couple seconds) before it shuts itself down.  If a task is submitted during the quiet period,\n * it is guaranteed to be accepted and the quiet period will start over.\n *\n * @param quietPeriod the quiet period as described in the documentation\n * @param timeout     the maximum amount of time to wait until the executor is {@linkplain #shutdown()}\n *                    regardless if a task was submitted during the quiet period\n * @param unit        the unit of {@code quietPeriod} and {@code timeout}\n *\n * @return the {@link #terminationFuture()}\n */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Future")]),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("shutdownGracefully")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" quietPeriod"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" timeout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),t._v(" unit"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[e("code",[t._v("shutdownGracefully")]),t._v("的方法说明，一旦该方法被调用，"),e("code",[t._v("isShuttingDown")]),t._v("方法调用时将会"),e("code",[t._v("true")]),t._v("，同时开始尝试关闭"),e("code",[t._v("executor")]),t._v("。优雅关闭保证在关闭之前，在静默时间（"),e("code",[t._v("quietPeriod")]),t._v("参数指定，通常是几秒中）内没有任务提交，如果在静默期内有任务提交，这个任务会被接收，静默时间会重新开始计算。")]),t._v(" "),e("h2",{attrs:{id:"管理eventexecutor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#管理eventexecutor"}},[t._v("#")]),t._v(" 管理EventExecutor")]),t._v(" "),e("p",[e("code",[t._v("EventExecutorGroup")]),t._v("管理了一组"),e("code",[t._v("EventExecutor")]),t._v("，二者的关系类似于Java Web中的"),e("code",[t._v("FilterChain")]),t._v("和"),e("code",[t._v("Filter")]),t._v("。")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventExecutor")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Iterator")]),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventExecutor")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("iterator")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[e("code",[t._v("EventExecutorGroup")]),t._v("提供了"),e("code",[t._v("next")]),t._v("和"),e("code",[t._v("iterator")]),t._v("两个方法用于访问其管理的"),e("code",[t._v("EventExecutor")]),t._v("，"),e("code",[t._v("next")]),t._v("方法返回其中一个"),e("code",[t._v("EventExecutor")]),t._v("，"),e("code",[t._v("iterator")]),t._v("则返回一个迭代器进行遍历。")]),t._v(" "),e("h2",{attrs:{id:"submit和schedule"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#submit和schedule"}},[t._v("#")]),t._v(" submit和schedule")]),t._v(" "),e("p",[e("code",[t._v("EventExecutorGroup")]),t._v("中也定义了"),e("code",[t._v("submit")]),t._v("和"),e("code",[t._v("schedule")]),t._v("两组方法，与"),e("code",[t._v("ExecutorService")]),t._v("中的基本相同，区别的是"),e("code",[t._v("EventExecutorGroup")]),t._v("中的方法返回的是"),e("code",[t._v("io.netty.util.concurrent.Future")]),t._v("，而"),e("code",[t._v("ExecutorService")]),t._v("中的方法返回的是"),e("code",[t._v("java.util.concurrent.Future")]),t._v("。")]),t._v(" "),e("h1",{attrs:{id:"eventexecutor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#eventexecutor"}},[t._v("#")]),t._v(" EventExecutor")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventExecutor")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventExecutorGroup")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventExecutor")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventExecutorGroup")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("parent")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("code",[t._v("EventExecutor")]),t._v("直接继承自"),e("code",[t._v("EventExecutorGroup")]),t._v("，这其实有点费解。按"),e("code",[t._v("EventExecutor")]),t._v("类中的注释说法，"),e("code",[t._v("EventExecutor")]),t._v("是一种特殊的"),e("code",[t._v("EventExecutorGroup")]),t._v("，提供了一些handy method，比如判断一个线程是否在EventLoop中。根本原因应该还是想拥有"),e("code",[t._v("EventExecutorGroup")]),t._v("中的任务管理的一些能力。")]),t._v(" "),e("p",[e("code",[t._v("EventExecutorGroup")]),t._v("中的"),e("code",[t._v("next")]),t._v("方法会返回其管理的一个"),e("code",[t._v("EventExecutor")]),t._v("实例。"),e("code",[t._v("EventExecutor")]),t._v("也提供了一个"),e("code",[t._v("next")]),t._v("方法，但是只返回了自身的引用。")]),t._v(" "),e("p",[e("code",[t._v("EventExecutor")]),t._v("的"),e("code",[t._v("parent")]),t._v("方法返回的是当前"),e("code",[t._v("EventExecutor")]),t._v("所属的"),e("code",[t._v("EventExecutorGroup")]),t._v("的实例引用。")]),t._v(" "),e("h2",{attrs:{id:"ineventloop"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ineventloop"}},[t._v("#")]),t._v(" inEventLoop")])])}),[],!1,null,null,null);e.default=n.exports}}]);